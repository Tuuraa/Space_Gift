import db
import inline_keybords
import helper
from User import UserDB
from config import PATH

dbUser = db.ManagerUsersDataBase()
dbPay = db.ManagerPayDataBase()

first_path = PATH + "/img/"

planets = ["–ú–µ—Ä–∫—É—Ä–∏–π", "–í–µ–Ω–µ—Ä–∞", "–ó–µ–º–ª—è", "–ú–∞—Ä—Å", "–Æ–ø–∏—Ç–µ—Ä", "–°–∞—Ç—É—Ä–Ω"]
money_add = [25_000, 75_000, 250_000, 1_000_000, 4_200_000, 12_000_000]
sums = [5000, 15_000, 50_000, 200_000, 800_000, 3_000_000]
out_money = [10_000, 25_000, 50_000, 200_000, 1_000_000, 3_000_000]
count_ref = [0, 2, 4, 8, 16, 32]


def get_photo(planet):
    match int(planet):
        case 0:
            return 0, planets[0]
        case 1:
            return 1, planets[1]
        case 2:
            return 2, planets[2]
        case 3:
            return 3, planets[3]
        case 4:
            return 4, planets[4]
        case 5:
            return 5, planets[5]
    return None


async def get_launch(bot, user_id, loop):
    planet = await dbUser.get_planet(user_id, loop)

    user = (await get_user_on_planet(planet, user_id, loop))

    if user is None:
        link = 'space_gift_bot'
        gift_id = 5415272844
    else:
        link = user.link
        gift_id = int(user.user_id)

    level = int((await dbUser.get_step(user_id, loop))[0])
    level_text = f"–£—Ä–æ–≤–µ–Ω—å {level}"
    path = ""
    more_text = ""
    active_text = ""
    text_planet = get_photo(planet[0])

    sum_gift = sums[text_planet[0]]
    text_planet = get_photo(planet[0])
    status = await dbUser.get_status(user_id, loop)

    text_status = " ‚ùå"
    if status[0] == 1:
        text_status = " ‚úÖ"

    c_ref = count_ref[int(planet[0])] - int(await dbUser.get_activate_count_ref(user_id, loop))
    c_ref_op = await dbUser.get_activate_count_ref(user_id, loop)
    if await dbUser.get_activate_count_ref(user_id, loop) < count_ref[int(planet[0])]:
        if c_ref_op == 0:
            active_text = f"\n‚ùóÔ∏è –ß—Ç–æ–±—ã –ø–æ–ø–∞—Å—Ç—å –≤ –æ—á–µ—Ä–µ–¥—å –Ω–∞ –ø–ª–∞–Ω–µ—Ç—É {text_planet[1]} –≤–∞–º –Ω—É–∂–Ω–æ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å " \
                         f"{c_ref} –∞–∫—Ç–∏–≤–Ω—ã—Ö —á–µ–ª." \
                         f" –∏–ª–∏ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –¥–µ–ø–æ–∑–∏—Ç –Ω–∞ {c_ref * 10_000} RUB ‚ùóÔ∏è\n"
        else:
            active_text = f"\n‚ùóÔ∏è –ß—Ç–æ–±—ã –ø–æ–ø–∞—Å—Ç—å –≤ –æ—á–µ—Ä–µ–¥—å –Ω–∞ –ø–ª–∞–Ω–µ—Ç—É {text_planet[1]} –≤–∞–º –Ω—É–∂–Ω–æ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –µ—â–µ " \
                      f"{c_ref} –∞–∫—Ç–∏–≤–Ω—ã—Ö —á–µ–ª." \
                      f" –∏–ª–∏ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –¥–µ–ø–æ–∑–∏—Ç –Ω–∞ {c_ref * 10_000} RUB ‚ùóÔ∏è\n"

    if level == 1 and status[0] == 0:
        path = first_path + f"{text_planet[1]}/–í –æ–∂–∏–¥–∞–Ω–∏–∏ ({text_planet[1].lower()}).png"
        level_text = "–í –æ–∂–∏–¥–∞–Ω–∏–∏"
    elif status[0] == 1 and await dbUser.get_count_ref(user_id, loop) >= count_ref[int(planet[0])] and gift_id != user_id:
        path = first_path + f"{text_planet[1]}/–í –æ—á–µ—Ä–µ–¥–∏ ({text_planet[1].lower()}).png"
        level_text = "–í –æ—á–µ—Ä–µ–¥–∏"
        ud = (await dbUser.get_planet(user_id, loop))[0]
        number = await get_queue(ud, user_id, loop)
        if type(number) is int:
            if number <= 10:
                more_text = f"\n–ù–æ–º–µ—Ä –≤ –æ—á–µ—Ä–µ–¥–∏: {number}"

        more_text += f"\n\nüôå–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –∑–∞–Ω—è–ª–∏ –º–µ—Å—Ç–æ –≤ –æ—á–µ—Ä–µ–¥–∏ –Ω–∞ –ø–æ–¥–∞—Ä–∫–∏ –æ—Ç –Ω–æ–≤—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –Ω–∞ —Å–≤–æ–π –¥–µ–ø–æ–∑–∏—Ç!\n" \
            f"‚ö°Ô∏è –ù–µ –∂–¥–∏ –æ—á–µ—Ä–µ–¥–∏, –Ω–∞—á–Ω–∏ —É–≤–µ–ª–∏—á–∏–≤–∞—Ç—å —Å–≤–æ–π –¥–µ–ø–æ–∑–∏—Ç —É–∂–µ —Å–µ–π—á–∞—Å –∏ –ø–æ–ª—É—á–∞—Ç—å –ø–æ 0,8% –≤ –¥–µ–Ω—å!\n\n"\
            f"1Ô∏è‚É£ –ò–Ω–≤–µ—Å—Ç–∏—Ä—É–π –≤ Space gift —Å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤.\n" \
            f"2Ô∏è‚É£ –ü–æ–ª—É—á–∞–π +5000—Ä –Ω–∞ –¥–µ–ø–æ–∑–∏—Ç –∑–∞ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω–æ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–∞.\n" \
            f"3Ô∏è‚É£ Space gift –Ω–∞—á–∏—Å–ª–∏—Ç –Ω–∞ –¥–µ–ø–æ–∑–∏—Ç 10% –æ—Ç –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π —Ä–µ—Ñ–µ—Ä–∞–ª–∞.\n\n" \
            f"–ù–ï –ñ–î–ò. –î–ï–ô–°–¢–í–£–ô üí™ ‚úÖ"

    elif status[0] == 1 and await dbUser.get_count_ref(user_id, loop) < count_ref[int(planet[0])] and gift_id != user_id:
        path = first_path + f"{text_planet[1]}/–í –æ—á–µ—Ä–µ–¥–∏ ({text_planet[1].lower()}).png"
        level_text = "–í –æ—á–µ—Ä–µ–¥–∏"
        ud = (await dbUser.get_planet(user_id, loop))[0]
        number = await get_queue(ud, user_id, loop)
        if type(number) is int:
            if number <= 10:
                more_text = f"\n–ù–æ–º–µ—Ä –≤ –æ—á–µ—Ä–µ–¥–∏: {number}"

        more_text += f"\n\nüôå–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –∑–∞–Ω—è–ª–∏ –º–µ—Å—Ç–æ –≤ –æ—á–µ—Ä–µ–¥–∏ –Ω–∞ –ø–æ–¥–∞—Ä–∫–∏ –æ—Ç –Ω–æ–≤—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –Ω–∞ —Å–≤–æ–π –¥–µ–ø–æ–∑–∏—Ç!\n" \
            f"‚ö°Ô∏è –ù–µ –∂–¥–∏ –æ—á–µ—Ä–µ–¥–∏, –Ω–∞—á–Ω–∏ —É–≤–µ–ª–∏—á–∏–≤–∞—Ç—å —Å–≤–æ–π –¥–µ–ø–æ–∑–∏—Ç —É–∂–µ —Å–µ–π—á–∞—Å –∏ –ø–æ–ª—É—á–∞—Ç—å –ø–æ 0,8% –≤ –¥–µ–Ω—å!\n\n" \
            f"1Ô∏è‚É£ –ò–Ω–≤–µ—Å—Ç–∏—Ä—É–π –≤ Space gift —Å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤.\n" \
            f"2Ô∏è‚É£ –ü–æ–ª—É—á–∞–π +5000—Ä –Ω–∞ –¥–µ–ø–æ–∑–∏—Ç –∑–∞ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω–æ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–∞.\n" \
            f"3Ô∏è‚É£ Space gift –Ω–∞—á–∏—Å–ª–∏—Ç –Ω–∞ –¥–µ–ø–æ–∑–∏—Ç 10% –æ—Ç –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π —Ä–µ—Ñ–µ—Ä–∞–ª–∞.\n\n" \
            f"–ù–ï –ñ–î–ò. –î–ï–ô–°–¢–í–£–ô üí™ ‚úÖ"
    else:
        path += first_path + f"{text_planet[1]}/–®–∞–≥ {int(level)} ({text_planet[1].lower()}).png"
        more_text += f"\n\n–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º üéâ –ù–∞ —ç—Ç–æ–º —É—Ä–æ–≤–Ω–µ –Ω–æ–≤—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –ø–æ–¥–∞—Ä–∏—Ç –í–∞–º + {sum_gift}‚ÇΩ –∫ –í–∞—à–µ–º—É –¥–µ–ø–æ–∑–∏—Ç—É! \n" \
                        f"–î–æ —Å–ª–µ–¥—É—é—â–µ–π –ø–ª–∞–Ω–µ—Ç—ã –æ—Å—Ç–∞–ª–æ—Å—å {5 - int(await dbUser.get_step(user_id, loop))} –ø–æ–¥–∞—Ä–∫–∞ üéÅ"

    text_plan = f"ü™ê –î–≤–∏–∂–µ–º—Å—è –∫ –ø–ª–∞–Ω–µ—Ç–µ: {text_planet[1]}"
    if text_planet[1] == planets[4] and level == 5:
        text_plan = "üéÜ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, –≤—ã –¥–æ–ª–µ—Ç–µ–ª–∏ –¥–æ –Æ–ø–∏—Ç–µ—Ä–∞! –í–∞—à –ø–æ–ª–µ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω! üéÜ"

    cd = await dbUser.get_amount_gift_money(user_id, loop)

    text = f"üìÜ –ü—Ä–æ—Ñ–∏–ª—å —Å–æ–∑–¥–∞–Ω: {await dbUser.get_date(user_id, loop)}\n" \
        f"ü§ñ –í–∞—à ID: {user_id}\n\n"\
        f"üë©‚ÄçüöÄ –ê—Å—Ç—Ä–æ–Ω–∞–≤—Ç: {await dbUser.get_name(user_id, loop)}\n"\
        f"üéÅ –°–∏—Å—Ç–µ–º—ã –¥–∞—Ä–µ–Ω–∏—è: {int(cd)} RUB\n"\
        f"{text_plan}\n"\
        f"üë• –õ–∏—á–Ω–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã—Ö: {await dbUser.get_count_ref(user_id, loop)} —á–µ–ª. ({await dbUser.get_activate_count_ref(user_id, loop)}).\n"\
        f"üöÄ –°—Ç–∞—Ç—É—Å: {level_text} {text_status} {more_text}\n {active_text}"

    if status[0] == 0:
        text += "\n‚úÖ –î–ª—è —Ç–æ–≥–æ —á—Ç–æ –±—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ —Å–∏—Å—Ç–µ–º–µ, –∏ –≤—Å—Ç–∞—Ç—å –≤ ¬´–æ—á–µ—Ä–µ–¥—å¬ª –Ω–∞ " \
               f"–ø–æ–¥–∞—Ä–∫–∏, –í–∞–º –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å üéÅ –ø–æ–¥–∞—Ä–æ–∫ " \
               f"–≤ —Ä–∞–∑–º–µ—Ä–µ {sums[text_planet[0]]} RUB –∞—Å—Ç—Ä–æ–Ω–∞–≤—Ç—É @{link}."

    try:
        with open(path, "rb") as file:
            await bot.send_photo(
                chat_id=user_id,
                photo=file,
                caption=text,
                reply_markup=await inline_keybords.laucnh_inline(dbUser, user_id, loop)
            )
    except:
        await bot.send_message(
            chat_id=user_id,
            text=text,
            reply_markup=await inline_keybords.laucnh_inline(dbUser, user_id, loop)
        )


async def get_user_on_merk(planet, user_id, loop):
    users = await dbUser.get_users_on_planet(planet, loop)
    users_on_planet = await helper.get_users(users, loop)

    active_users = helper.get_active_status_users(users_on_planet, int((await dbUser.get_planet(user_id, loop))[0]))
    active_users = [x for x in active_users if x.activate_date is not None]

    if len(active_users) > 0:
        max_step_user = max(active_users, key=lambda sort: sort.step)
        if int(max_step_user.step) == 1:
            active_users.sort(key=lambda sort: sort.activate_date)
            if len(active_users) > 0:
                return active_users[0]
            else:
                return None
        else:
            return max_step_user
    else:
        return None


async def get_user_on_planet(planet, user_id, loop):

    # if int(planet[0]) == 0:
    return await get_user_on_merk(planet, user_id, loop)

    # users = await dbUser.get_users_on_planet(planet, loop)
    # users_on_planet = await helper.get_users(users, loop)
    # active_users = helper.get_active_status_users(users_on_planet, int((await dbUser.get_planet(user_id, loop))[0]))
    #
    # if len(active_users) > 0:
    #     max_step_user = max(active_users, key=lambda sort: sort.step)
    #     if int(max_step_user.step) == 1:
    #         gifts_users = helper.active_users(active_users)
    #
    #         if len(active_users) > 0:
    #             gifts_users.sort(key=lambda sort: sort.count_ref, reverse=1)
    #             active_users.sort(key=lambda sort: sort.count_ref, reverse=1)
    #
    #             active_user = active_users[0]
    #             active = await dbUser.get_active(active_user.user_id, loop)
    #             if active != 1:
    #                 await dbUser.update_active(active_users[0].user_id, loop)
    #             if len(gifts_users) > 0:
    #                 for user in gifts_users:
    #                     if user.user_id != active_user.user_id:
    #                         await dbUser.reset_active(user.user_id, loop)
    #             return active_users[0]
    #         else:
    #             return None
    #     else:
    #         return max_step_user
    # else:
    #     return None


async def get_gift(user_id, gift_user: UserDB, loop):
    if user_id == gift_user.user_id:
        return False, "–ù–µ–ª—å–∑—è –¥–∞—Ä–∏—Ç—å —Å–∞–º–æ–º—É —Å–µ–±–µ ‚ùå"

    planet = await dbUser.get_planet(user_id, loop)
    text_planet = get_photo(planet[0])

    sum_gift = sums[text_planet[0]]
    #system_gift = await dbUser.get_amount_gift_money(user_id, loop)

    await dbUser.get_gift(gift_user.user_id, user_id, sum_gift, loop)
    #await dbUser.add_amount_gift_money(gift_user.user_id, sum_gift, loop)
    #await dbUser.add_money(gift_user.user_id, sum_gift, loop)
    #await dbUser.set_now_depozit(user_id, sum_gift, loop)
    #await dbUser.remove_money(user_id, sum_gift, loop)
    now_dep = await dbUser.get_now_depozit(gift_user.user_id, loop)

    if now_dep > 0:
        await dbUser.add_now_dep(gift_user.user_id, now_dep, loop)
        #await dbUser.add_amount_gift_money(gift_user.user_id, now_dep, loop)
        #await dbUser.set_now_depozit(gift_user.user_id, 0, loop)

    if int(planet[0]) > 0:
        amount = await dbUser.get_amount_gift_money(user_id, loop)
        if amount >= sum_gift:
            await dbUser.remove_amount_gift_money(user_id, sum_gift, loop)
        else:
            return False, "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥"
    else:
        await dbUser.remove_depozit(sum_gift, user_id, loop)

    return True, f"–í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∞—Ä–∏–ª–∏ @{gift_user.link} {sum_gift} RUB", sum_gift


async def gift(bot, user: UserDB, loop):

    planet = await dbUser.get_planet(user.user_id, loop)
    path = first_path

    astr = await get_user_on_planet(user.planet, user.user_id, loop)
    if astr is None:
        link = "@space_gift_bot"
    elif astr.link == (await dbUser.get_name(user.user_id, loop)):
        link = "@space_gift_bot"
    else:
        link = f"@{astr.link}"
    text_planet = get_photo(planet[0])
    text_planet_next = get_photo(int(planet[0]) + 1)
    if text_planet_next is None:
        text_planet_next = (5, '–°–∞—Ç—É—Ä–Ω')

    sum_add = money_add[text_planet[0]]
    sum_gift = sums[text_planet[0]]
    path += f"{text_planet[1]}/–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º. {text_planet[1]}.png"

    await dbUser.gift(user.user_id, (sum_add - out_money[text_planet[0]]), out_money[text_planet[0]],
                      (sum_add - out_money[text_planet[0]] - sum_gift), sum_gift * 4, loop)
    #await dbUser.add_money(user.user_id, (sum_add - out_money[text_planet[0]]), loop)
    #await dbUser.add_gift_money(user.user_id, out_money[text_planet[0]], loop)
    #await dbUser.add_amount_gift_money(user.user_id, (sum_add - out_money[text_planet[0]] - sum_gift), loop)
    #await dbUser.change_first_dep(user.user_id, 0, loop)

    now_dep = await dbUser.get_now_depozit(user.user_id, loop)
    if now_dep > 0:
        await dbUser.reset_now_dep_for_new_planet(user.user_id, now_dep, loop)
        # await dbUser.add_amount_gift_money(user.user_id, now_dep, loop)
        # await dbUser.remove_now_depozit(user.user_id, now_dep, loop)

    await dbUser.reset_activate_date(user.user_id, loop)

    text = f"–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! üéâ –≤—ã —Ç–µ–ø–µ—Ä—å –Ω–∞ –ø–ª–∞–Ω–µ—Ç–µ {text_planet[1]}! üôå\n\n" \
           f"üë©‚ÄçüöÄ –ù–∞ –≤–∞—à –¥–µ–ø–æ–∑–∏—Ç –±—ã–ª–æ –ø–æ–¥–∞—Ä–µ–Ω–æ  üéÅ +{sum_add} RUB, " \
           f"–∏–∑ –Ω–∏—Ö –í—ã –º–æ–∂–µ—Ç–µ –≤—ã–≤–µ—Å—Ç–∏ {out_money[text_planet[0]]} RUB \n( —Å 20% –∫–æ–º–∏—Å—Å–∏–µ–π )\n\n" \
           f"–ß—Ç–æ–±—ã –≤–∑–ª–µ—Ç–µ—Ç—å üöÄ –Ω–∞ –ø–ª–∞–Ω–µ—Ç—É {text_planet_next[1]}, –Ω—É–∂–Ω–æ –æ—Å—Ç–∞—Ç–æ–∫ " \
           f"–í–∞—à–µ–≥–æ –¥–µ–ø–æ–∑–∏—Ç–∞ –ø–æ–¥–∞—Ä–∏—Ç—å –ê—Å—Ç—Ä–æ–Ω–∞–≤—Ç—É {link}"

    with open(path, "rb") as file:
        try:
            await bot.send_photo(
                chat_id=user.user_id,
                photo=file,
                caption=text,
            )
        except:
            pass


async def get_queue(planet, user_id, loop):
    users = await dbUser.get_users_on_planet(planet, loop)
    users_on_planet = await helper.get_users(users, loop)
    active_users = helper.get_active_status_users(users_on_planet, int((await dbUser.get_planet(user_id, loop))[0]))
    active_users = [x for x in active_users if x.activate_date is not None]

    if len(active_users) > 0:
        active_users.sort(key=lambda sort: sort.activate_date)
    index = 1

    for user in active_users:
        if int(user.user_id) == user_id:
            return index
        index += 1
    return "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤, –¥–ª—è –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è –≤ –æ—á–µ—Ä–µ–¥—å"


async def check_active(planet, user_id, loop):
    users = await dbUser.get_users_on_planet(planet, loop)
    users_on_planet = await helper.get_users(users, loop)
    active_users = helper.get_active_status_users(users_on_planet, int((await dbUser.get_planet(user_id, loop))[0]))
    gifts_users = helper.active_users(active_users)

    if len(active_users) > 0:
        gifts_users.sort(key=lambda sort: sort.count_ref, reverse=1)
    if len(gifts_users) > 0:
        if user_id != gifts_users[0].user_id:
            await dbUser.reset_active(user_id, loop)


async def get_amount_gift_money(user_id, loop):
    planet = int((await dbUser.get_planet(user_id, loop))[0])
    step = int(await dbUser.get_step(user_id, loop))
    money = 0

    if planet == 0:
        if (await dbUser.get_status(user_id, loop))[0] == 1:
            money += 5000
            if step > 1:
                for i in range(1, step):
                    money += 5000
                return money
        return money

    for temp in range(1, planet+1):
        money += sums[temp - 1] + money_add[temp - 1]
    if step > 1:
        for i in range(1, step):
            money += sums[planet]
        return money
    return 0

