import db
import inline_keybords
import helper
from User import UserDB
from config import PATH

dbUser = db.ManagerUsersDataBase()
dbPay = db.ManagerPayDataBase()

first_path = PATH + "img\\"

planets = ["–ú–µ—Ä–∫—É—Ä–∏–π", "–í–µ–Ω–µ—Ä–∞", "–ó–µ–º–ª—è", "–ú–∞—Ä—Å", "–Æ–ø–∏—Ç–µ—Ä", "–°–∞—Ç—É—Ä–Ω"]
money_add = [20_000, 60_000, 200_000, 800_000, 3_200_000, 9_000_000]
sums = [5000, 15_000, 50_000, 200_000, 800_000, 3_000_000]
out_money = [10_000, 25_000, 50_000, 200_000, 1_000_000, 3_000_000]
count_ref = [0, 2, 6, 12, 20, 54]


def get_photo(planet):
    match int(planet):
        case 0:
            return 0, planets[0]
        case 1:
            return 1, planets[1]
        case 2:
            return 2, planets[2]
        case 3:
            return 3, planets[3]
        case 4:
            return 4, planets[4]
        case 5:
            return 5, planets[5]

    return None


async def get_launch(bot, user_id):
    gift_user = (await get_user_on_planet(dbUser.get_planet(user_id)[0], user_id)).link

    planet = dbUser.get_planet(user_id)
    level = int(dbUser.get_step(user_id)[0])
    level_text = f"–£—Ä–æ–≤–µ–Ω—å {level}"
    path = ""
    active = dbUser.get_active(user_id)
    more_text = ""
    active_text = ""

    text_planet = get_photo(planet[0])
    status = dbUser.get_status(user_id)

    text_status = " ‚ùå"
    if status[0] == 1:
        text_status = " ‚úÖ"

    if dbUser.get_count_ref(user_id) < count_ref[int(planet[0])]:
        active_text = f"\n–ß—Ç–æ–±—ã –ø–æ–ø–∞—Å—Ç—å –≤ –æ—á–µ—Ä–µ–¥—å –≤–∞–º –Ω—É–∂–Ω–æ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å {count_ref[int(planet[0])] - int(dbUser.get_count_ref(user_id))} —á–µ–ª.\n"

    if level == 1 and status[0] == 0:
        path = first_path + f"{text_planet[1]}\\–í –æ–∂–∏–¥–∞–Ω–∏–∏ ({text_planet[1].lower()}).png"
        level_text = "–í –æ–∂–∏–¥–∞–Ω–∏–∏"
    elif active == 0 and status[0] == 1 and dbUser.get_count_ref(user_id) >= count_ref[int(planet[0])]:
        path = first_path + f"{text_planet[1]}\\–í –æ—á–µ—Ä–µ–¥–∏ ({text_planet[1].lower()}).png"
        level_text = "–í –æ—á–µ—Ä–µ–¥–∏"
        ud = dbUser.get_planet(user_id)[0]
        number = await get_queue(ud, user_id)
        if type(number) is int:
            more_text = f"\n–ù–æ–º–µ—Ä –≤ –æ—á–µ—Ä–µ–¥–∏: {number}\n\n" \
                     f"üôå–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –∑–∞–Ω—è–ª–∏ –º–µ—Å—Ç–æ –≤ –æ—á–µ—Ä–µ–¥–∏ –Ω–∞ –ø–æ–¥–∞—Ä–∫–∏ –æ—Ç –Ω–æ–≤—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –Ω–∞ —Å–≤–æ–π –¥–µ–ø–æ–∑–∏—Ç!\n" \
                     f"‚ö° –ù–µ –∂–¥–∏ –æ—á–µ—Ä–µ–¥–∏, –Ω–∞—á–Ω–∏ —É–≤–µ–ª–∏—á–∏–≤–∞—Ç—å —Å–≤–æ–π –¥–µ–ø–æ–∑–∏—Ç —É–∂–µ —Å–µ–π—á–∞—Å –∏ –ø–æ–ª—É—á–∞—Ç—å –ø–æ 0,6% –≤ –¥–µ–Ω—å!\n\n "\
                     f"–ï—Å—Ç—å –¥–≤–∞ —Å–ø–æ—Å–æ–±–∞\n" \
                     f"1Ô∏è‚É£ –ü–æ–ø–æ–ª–Ω–∏—Ç—å –¥–µ–ø–æ–∑–∏—Ç —Å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤\n" \
                     f"2Ô∏è‚É£ –ó–∞ —Å—á–µ—Ç –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π \n" \
                     f"( –ó–∞ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω–æ–≥–æ —Ç—ã –ø–æ–ª—É—á–∏—à—å  + 5000—Ä –Ω–∞ –¥–µ–ø–æ–∑–∏—Ç )\n\n" \
                     f"–ù–ï –ñ–î–ò. –î–ï–ô–°–¢–í–£–ô üí™ ‚úÖ"
    elif active == 0 and status[0] == 1 and dbUser.get_count_ref(user_id) < count_ref[int(planet[0])]:
        path = first_path + f"{text_planet[1]}\\{text_planet[1]} –æ—á–µ—Ä–µ–¥—å.png"
        level_text = "–í –æ–∂–∏–¥–∞–Ω–∏–µ"
    else:
        path += first_path + f"{text_planet[1]}\\–®–∞–≥ {int(level)} ({text_planet[1].lower()}).png"
        more_text += "\n\n–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º üéâ –ù–∞ —ç—Ç–æ–º —É—Ä–æ–≤–Ω–µ –Ω–æ–≤—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –ø–æ–¥–∞—Ä–∏—Ç –í–∞–º + 5000‚ÇΩ –∫ –í–∞—à–µ–º—É –¥–µ–ø–æ–∑–∏—Ç—É! \n" \
                        f"–î–æ –ø–ª–∞–Ω–µ—Ç—ã –ú–µ—Ä–∫—É—Ä–∏–π –æ—Å—Ç–∞–ª–æ—Å—å {4 - int(dbUser.get_step(user_id))} –ø–æ–¥–∞—Ä–∫–∞ üéÅ"

    text_plan = f"ü™ê –î–≤–∏–∂–µ–º—Å—è –∫ –ø–ª–∞–Ω–µ—Ç–µ: {text_planet[1]}"
    if text_planet[1] == planets[4] and level == 5:
        text_plan = "üéÜ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, –≤—ã –¥–æ–ª–µ—Ç–µ–ª–∏ –¥–æ –Æ–ø–∏—Ç–µ—Ä–∞! –í–∞—à –ø–æ–ª–µ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω! üéÜ"

    text = f"üìÜ –ü—Ä–æ—Ñ–∏–ª—å —Å–æ–∑–¥–∞–Ω: {dbUser.get_date(user_id)}\n" \
        f"ü§ñ –í–∞—à ID: {user_id}\n\n" \
        f"üë©‚ÄçüöÄ –ê—Å—Ç—Ä–æ–Ω–∞–≤—Ç: {dbUser.get_name(user_id)}\n"\
        f"üí∞ –í–∞—à –¥–µ–ø–æ–∑–∏—Ç: {dbUser.get_deposit(user_id)} RUB\n"\
        f"{text_plan}\n" \
        f"üë• –õ–∏—á–Ω–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã—Ö: {dbUser.get_count_ref(user_id)} —á–µ–ª.\n"\
        f"üöÄ –°—Ç–∞—Ç—É—Å: {level_text} {text_status} {more_text}\n {active_text}"

    if status[0] == 0:
        text += "\n‚ùó –î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –í–∞–º –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å—Å—è –Ω–∞ —É—Ä–æ–≤–Ω–µ 1 " \
                f"–Ω–∞ –ø–ª–∞–Ω–µ—Ç–µ {planets[int(planet[0])]} –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –ø–æ–¥–∞—Ä–æ–∫ –≤ —Ä–∞–∑–º–µ—Ä–µ {sums[text_planet[0]]} RUB –∞—Å—Ç—Ä–æ–Ω–∞–≤—Ç—É ‚ùó"

    with open(path, "rb") as file:
        await bot.send_photo(
            chat_id=user_id,
            photo=file,
            caption=text,
            reply_markup=inline_keybords.laucnh_inline(dbUser, user_id)
        )


async def get_user_on_planet(planet, user_id):
    users = dbUser.get_users_on_planet(planet)
    users_on_planet = helper.get_users(users)
    active_users = helper.get_active_status_users(users_on_planet, int(dbUser.get_planet(user_id)[0]))

    gifts_users = helper.active_users(active_users)

    if len(active_users) > 0:
        gifts_users.sort(key=lambda sort: sort.count_ref, reverse=1)
        active_users.sort(key=lambda sort: sort.count_ref, reverse=1)

        active_user = active_users[0]
        active = dbUser.get_active(active_user.user_id)
        if active != 1:
            dbUser.update_active(active_users[0].user_id)
        if len(gifts_users) > 0:
            for user in gifts_users:
                if user.user_id != active_user.user_id:
                    dbUser.reset_active(user.user_id)
        return active_users[0]
    else:
        return "–ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"


async def get_gift(user_id, gift_user: UserDB):
    if user_id == gift_user.user_id:
        return False, "–ù–µ–ª—å–∑—è –¥–∞—Ä–∏—Ç—å —Å–∞–º–æ–º—É —Å–µ–±–µ ‚ùå"

    planet = dbUser.get_planet(user_id)
    text_planet = get_photo(planet[0])

    sum_gift = sums[text_planet[0]]
    if int(dbUser.get_money(user_id)) < sum_gift:
        return False, "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥"

    dbUser.remove_money(user_id, sum_gift)
    return True, f"–í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∞—Ä–∏–ª–∏ @{gift_user.link} {sum_gift} RUB", sum_gift


async def gift(bot, user: UserDB):
    planet = dbUser.get_planet(user.user_id)
    path = first_path

    text_planet = get_photo(planet[0])
    sum_add = money_add[text_planet[0]]
    sum_gift = sums[text_planet[0]]
    path += f"{text_planet[1]}\\–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º. {text_planet[1]}.png"

    dbUser.add_money(user.user_id, (sum_add - out_money[text_planet[0]]) + sum_gift)
    dbUser.add_gift_money(user.user_id, out_money[text_planet[0]])
    dbUser.set_now_depozit(user.user_id, 0)
    dbUser.set_now_depozit(user.user_id, (sum_add - out_money[text_planet[0]]))
    dbUser.change_first_dep(user.user_id, 1)

    with open(path, "rb") as file:
        await bot.send_photo(
            chat_id=user.user_id,
            photo=file,
            caption=f"üéÜ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, –≤—ã —Ç–µ–ø–µ—Ä—å –Ω–∞ –ø–ª–∞–Ω–µ—Ç–µ {text_planet[1]}! üéÜ"
        )
    await bot.send_message(
        user.user_id,
        f"üë©‚ÄçüöÄ –ù–∞ –≤–∞—à —Å—á–µ—Ç –Ω–∞—á–∏—Å–ª–µ–Ω–Ω–æ +{sum_gift} RUB, –∏–∑ –Ω–∏—Ö –≤—ã –º–æ–∂–µ—Ç–µ –≤—ã–≤–µ—Å—Ç–∏ {out_money[text_planet[0]]} RUB."
    )
    await bot.send_message(
        user.user_id,
        f"‚ùó –î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –í–∞–º –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å—Å—è –Ω–∞ —É—Ä–æ–≤–Ω–µ 1 –Ω–∞ –ø–ª–∞–Ω–µ—Ç–µ "
                f"{planets[int(planet[0]) + 1]} –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –ø–æ–¥–∞—Ä–æ–∫ –≤ "
                f"—Ä–∞–∑–º–µ—Ä–µ {sums[text_planet[0] + 1]} RUB –∞—Å—Ç—Ä–æ–Ω–∞–≤—Ç—É‚ùó"
    )

    await bot.send_message(
        user.user_id,
        f"–í—ã –º–æ–∂–µ—Ç–µ —É–¥–≤–æ–∏—Ç—å –≤–∞—à –ø–æ–¥–∞—Ä–æ–∫ –≤ —Ä–∞–∑–º–µ—Ä–µ {sum_add - out_money[text_planet[0]] + sum_gift} RUB",
        reply_markup=inline_keybords.get_double_dep()
    )


async def get_queue(planet, user_id):
    users = dbUser.get_users_on_planet(planet)
    users_on_planet = helper.get_users(users)
    # current_user = helper.get_current_user(users_on_planet, user_id)
    active_users = helper.get_active_status_users(users_on_planet, int(dbUser.get_planet(user_id)[0]))

    if len(active_users) > 0:
        active_users.sort(key=lambda sort: sort.count_ref)
    index = len(active_users)

    for user in active_users:
        if user.user_id == user_id:
            return index
        index -= 1
    return "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤, –¥–ª—è –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è –≤ –æ—á–µ—Ä–µ–¥—å"


async def check_active(planet, user_id):
    users = dbUser.get_users_on_planet(planet)
    users_on_planet = helper.get_users(users)
    active_users = helper.get_active_status_users(users_on_planet, int(dbUser.get_planet(user_id)[0]))
    gifts_users = helper.active_users(active_users)

    if len(active_users) > 0:
        gifts_users.sort(key=lambda sort: sort.count_ref, reverse=1)
    if len(gifts_users) > 0:
        if user_id != gifts_users[0].user_id:
            dbUser.reset_active(user_id)


async def get_amount_gift_money(user_id):
    planet = int(dbUser.get_planet(user_id)[0])
    step = int(dbUser.get_step(user_id))
    money = 0

    if planet == 0:
        if dbUser.get_status(user_id)[0] == 1:
            money += 5000
            if step > 1:
                for i in range(1, step):
                    money += 5000
                return money
        return money

    for temp in range(1, planet+1):
        money += sums[temp - 1] + money_add[temp - 1]
    if step > 1:
        for i in range(1, step):
            money += sums[planet]
        return money
    return 0
