from aiogram import types
from random import randint
from db import ManagerUsersDataBase
import PayManager


def get_start_inline():
    return types.InlineKeyboardMarkup().\
        add(types.InlineKeyboardButton("–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è", callback_data="login"))


def accept_inline():
    return types.InlineKeyboardMarkup().\
        add(types.InlineKeyboardButton("‚úÖ –ü—Ä–∏–Ω—è—Ç—å —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ Space Gift", callback_data="capcha"))


async def create_capcha(bot, id):
    value_first, value_second = randint(10, 50), randint(10, 50)
    sum = value_first + value_second

    sum_but = types.InlineKeyboardButton(str(sum), callback_data="right")

    row, column = randint(0, 1), randint(0, 2)
    markups = types.InlineKeyboardMarkup()

    for i in range(0, 2):
        list_buttons = []
        while len(list_buttons) != 3:
            rund = randint(min(value_first, value_second), sum * 2)
            if rund != sum:
                list_buttons.append(types.InlineKeyboardButton(str(rund), callback_data="except"))
        if i == row:
            list_buttons[column] = sum_but
        markups.row(list_buttons[0], list_buttons[1], list_buttons[2])

    markups.add(types.InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel"))

    await bot.send_message(id, f"–ß—Ç–æ–±—ã –ø—Ä–∏–Ω—è—Ç—å —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ Space Gift –∏ \n"
                           "–ø–æ–ª–∏—Ç–∏–∫—É –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏"
                           "\n–≤—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç.\n"
                            "üëâ –°–∫–æ–ª—å–∫–æ –±—É–¥–µ—Ç:"
                           f"\n{value_first} + {value_second} = ?",
                           reply_markup=markups)


def profile_markup():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add().row(types.KeyboardButton("üöÄ –í–∑–ª—ë—Ç"), types.KeyboardButton("üìù –û –ø—Ä–æ–µ–∫—Ç–µ"))
    markup.add().row(types.KeyboardButton("üí≥ –ö–æ—à–µ–ª—ë–∫"), types.KeyboardButton("üåë Space Money"))
    markup.add().row(types.KeyboardButton("üîß –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã"), types.KeyboardButton("‚öô –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞"))
    markup.add().row("–¢–µ—Å—Ç–æ–≤–æ–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ", "–£–¥–∞–ª–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç", "–¢–µ—Å—Ç–æ–≤—ã–µ –∫–ª–æ–Ω—ã")

    return markup


def sure_login():
    return types.InlineKeyboardMarkup().row(
        types.InlineKeyboardButton("–î–∞ ‚úÖ", callback_data="yes_ans"),
        types.InlineKeyboardButton("–ù–µ—Ç ‚ùå", callback_data="no_ans")
    )


def add_money():
    return types.InlineKeyboardMarkup().row(
        types.InlineKeyboardButton("‚ûï –ü–æ–ø–æ–ª–Ω–∏—Ç—å", callback_data="add_money"),
        types.InlineKeyboardButton("‚ûñ –í—ã–≤–µ—Å—Ç–∏", callback_data="remove_money")
    )


def calculate():
    return types.InlineKeyboardMarkup()\
        .add(types.InlineKeyboardButton("–†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å–Ω–æ–≤–∞", callback_data="calculate"))


def back():
    return types.ReplyKeyboardMarkup(resize_keyboard=True).add(types.InlineKeyboardButton("–û—Ç–º–µ–Ω–∏—Ç—å –ø–ª–∞—Ç–µ–∂", callback_data="calculate"))


def takeoff():
    return types.InlineKeyboardMarkup().add(
            types.InlineKeyboardButton("üí∏ –ü–æ–ø–æ–ª–Ω–∏—Ç—å", callback_data="set_money_for_gift")
        )


def get_gift():
    return types.InlineKeyboardMarkup().\
        add(types.InlineKeyboardButton("‚ñ™ –ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞ RUB", callback_data="payrement_bank")).\
        add(types.InlineKeyboardButton("‚ñ™ –ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞", callback_data="payrement_crypt"))


def get_crypt_types():
    return types.InlineKeyboardMarkup().add(types.InlineKeyboardButton("BTC", callback_data="btc_trans"),
                                            types.InlineKeyboardButton("LTC", callback_data="ltc_trans"),
                                            types.InlineKeyboardButton("ETH", callback_data="eth_trans"))


async def banks_payment():

    banks: list = await PayManager.get_banks()
    inline = types.InlineKeyboardMarkup()

    for bank in banks[1:]:
        inline.add(types.InlineKeyboardButton(str(bank).title(), callback_data=bank))

    return inline


def cancel_pay():
    return types.InlineKeyboardMarkup().add(types.InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É", callback_data="cancel_pay"))


def get_about_project():
    return types.ReplyKeyboardMarkup(resize_keyboard=True).add(
        types.KeyboardButton("–û Space Gift"),
        types.KeyboardButton("O Space Money"),
        types.KeyboardButton("–ß—Ç–æ —Ç–∞–∫–æ–µ –∞—Ä–±–∏—Ç—Ä–∞–∂"),
        types.KeyboardButton("‚¨Ö –í–µ—Ä–Ω—É—Ç—å—Å—è")
    )


def get_tools():
    return types.ReplyKeyboardMarkup(resize_keyboard=True).add(
        types.KeyboardButton("–†–∞—Å—Å—á–∏—Ç–∞—Ç—å –ø–∞—Å—Å–∏–≤"),
        types.KeyboardButton("–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞"),
        types.KeyboardButton("–ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è"),
        types.KeyboardButton("‚¨Ö –í–µ—Ä–Ω—É—Ç—å—Å—è")
    )


def get_link_to_space_money():
    return types.InlineKeyboardMarkup().add(
        types.InlineKeyboardButton(text="–°—Å—ã–ª–∫–∞ –Ω–∞ —Å–∞–π—Ç", url="https://www.youtube.com/watch?v=dQw4w9WgXcQ")
    )


def get_wallet_inline():
    return types.InlineKeyboardMarkup().add(
        types.InlineKeyboardButton("‚ûï –ü–æ–ø–æ–ª–Ω–∏—Ç—å", callback_data="add_money"),
        types.InlineKeyboardButton("‚ûñ –í—ã–≤–µ—Å—Ç–∏", callback_data="remove_money"))


def get_double_dep():
    return types.InlineKeyboardMarkup().add(
        types.InlineKeyboardButton("–£–¥–≤–æ–∏—Ç—å –¥–µ–ø–æ–∑–∏—Ç", callback_data="get_double_deposit")
    )


def get_transfer_inline():
    return types.InlineKeyboardMarkup().add(
        types.InlineKeyboardButton("–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è", url="https://t.me/Financespacemoney_bot"),
        types.InlineKeyboardButton("–ö–æ–¥", callback_data="code_for_transfer_money")
    )


def get_inline_for_withdraw():
    return types.InlineKeyboardMarkup().\
        add(types.InlineKeyboardButton("‚ñ™ –ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞ RUB", callback_data="withdraw_payrement_bank")).\
        add(types.InlineKeyboardButton("‚ñ™ –ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞", callback_data="withdraw_payrement_crypt"))


def get_admi_crypt_type():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add().row("BTC", "LTC", "ETH")
    return markup


def get_gift_ok_inline():
    return types.InlineKeyboardMarkup().add(types.InlineKeyboardButton("–í–ø–µ—Ä–µ–¥", callback_data="ok_gift"))


def get_full_users(db: ManagerUsersDataBase):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)

    users = db.get_full_users_name()
    for item in range(0, len(users), 2):
        if item + 2 <= len(users):
            markup.row(types.KeyboardButton(users[item][0]), users[item+1][0])
        else:
            markup.add(types.KeyboardButton(users[item][0]))
    markup.add(types.KeyboardButton("–ù–∞–∑–∞–¥"))
    return markup


def cancel_trans_money():
    return types.ReplyKeyboardMarkup(resize_keyboard=True).add("–û—Ç–º–µ–Ω–∏—Ç—å")


def laucnh_inline(db, user_id):

    mark = types.InlineKeyboardMarkup()
    status = db.get_status(user_id)

    if status[0] == 0:  #üéÅ –°–¥–µ–ª–∞—Ç—å –ø–æ–¥–∞—Ä–æ–∫
        return mark.add(types.InlineKeyboardButton("üéÅ –°–¥–µ–ª–∞—Ç—å –ø–æ–¥–∞—Ä–æ–∫", callback_data="get_gift"))
    else:
        return types.InlineKeyboardMarkup().add(
            types.InlineKeyboardButton("üí∏ –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å", callback_data="set_money_for_gift"))\
            .add(types.InlineKeyboardButton("üôã‚Äç‚ôÇ –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞", callback_data="invite_new_person")
        )


def inform_pers():
    return types.InlineKeyboardMarkup().\
        add(types.InlineKeyboardButton("üí¨ –û—Å–≤–µ–¥–æ–º–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞", callback_data="inform_pers"))

